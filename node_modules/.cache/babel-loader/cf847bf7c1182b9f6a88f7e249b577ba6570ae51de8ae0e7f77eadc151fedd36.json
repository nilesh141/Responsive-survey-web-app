{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\spdintern\\\\src\\\\Survey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport './survey.css';\nimport ConfirmationDialog from './ConfirmationDialog';\n\n// questionsData remains the same\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = ({\n  onComplete\n}) => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [isConfirming, setIsConfirming] = useState(false);\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n  const handleNext = () => {\n    setCurrentQuestion(prev => Math.min(prev + 1, questionsData.length - 1));\n  };\n  const handlePrevious = () => {\n    setCurrentQuestion(prev => Math.max(prev - 1, 0));\n  };\n  const handleSubmit = () => {\n    setIsConfirming(true); // Trigger confirmation dialog\n  };\n  const handleConfirm = () => {\n    // Save answers to localStorage or backend\n    localStorage.setItem('surveyAnswers', JSON.stringify({\n      ...answers,\n      status: 'COMPLETED'\n    }));\n\n    // Call onComplete to indicate survey is finished and show thank-you page\n    onComplete();\n  };\n  if (isConfirming) {\n    return /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentQuestion + 1, \" / \", questionsData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      question: questionsData[currentQuestion],\n      answer: answers[questionsData[currentQuestion].id],\n      onChange: handleAnswerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentQuestion === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentQuestion === questionsData.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), currentQuestion === questionsData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Survey, \"60AN0ZoORxvuhb1oULHGA41KO44=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","Question","ConfirmationDialog","jsxDEV","_jsxDEV","Survey","onComplete","_s","currentQuestion","setCurrentQuestion","answers","setAnswers","isConfirming","setIsConfirming","handleAnswerChange","questionId","answer","prev","handleNext","Math","min","questionsData","length","handlePrevious","max","handleSubmit","handleConfirm","localStorage","setItem","JSON","stringify","status","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","className","children","question","id","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/PROJECTS/spdintern/src/Survey.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Question from './Question';\r\nimport './survey.css';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\n\r\n// questionsData remains the same\r\n\r\nconst Survey = ({ onComplete }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers((prev) => ({ ...prev, [questionId]: answer }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentQuestion((prev) => Math.min(prev + 1, questionsData.length - 1));\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentQuestion((prev) => Math.max(prev - 1, 0));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsConfirming(true);  // Trigger confirmation dialog\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    // Save answers to localStorage or backend\r\n    localStorage.setItem('surveyAnswers', JSON.stringify({ ...answers, status: 'COMPLETED' }));\r\n    \r\n    // Call onComplete to indicate survey is finished and show thank-you page\r\n    onComplete();\r\n  };\r\n\r\n  if (isConfirming) {\r\n    return <ConfirmationDialog onConfirm={handleConfirm} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"survey\">\r\n      <h2>Question {currentQuestion + 1} / {questionsData.length}</h2>\r\n      <Question \r\n        question={questionsData[currentQuestion]} \r\n        answer={answers[questionsData[currentQuestion].id]}\r\n        onChange={handleAnswerChange}\r\n      />\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrevious} disabled={currentQuestion === 0}>Previous</button>\r\n        <button onClick={handleNext} disabled={currentQuestion === questionsData.length - 1}>Next</button>\r\n      </div>\r\n      {currentQuestion === questionsData.length - 1 && (\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Survey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}