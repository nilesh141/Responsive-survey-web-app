{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\spdintern\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WelcomeScreen from './WelcomeScreen';\nimport Survey from './Survey';\nimport ThankYouScreen from './ThankYouScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [started, setStarted] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [viewAdmin, setViewAdmin] = useState(false); // State to toggle admin view\n\n  const handleStart = () => {\n    setStarted(true);\n  };\n  const handleCompletion = () => {\n    setCompleted(true);\n  };\n  const resetSurvey = () => {\n    setStarted(false);\n    setCompleted(false);\n    localStorage.removeItem('surveyAnswers');\n  };\n  if (viewAdmin) {\n    return /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this); // Render the AdminPage when the button is clicked\n  }\n  if (completed) {\n    return /*#__PURE__*/_jsxDEV(ThankYouScreen, {\n      onReset: resetSurvey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setViewAdmin(!viewAdmin),\n      children: viewAdmin ? 'Back to Survey' : 'View Admin Page'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), started ? /*#__PURE__*/_jsxDEV(Survey, {\n      onComplete: handleCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n      onStart: handleStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rzlRyo34057/DuPbvFXnjQ1M6sA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WelcomeScreen","Survey","ThankYouScreen","jsxDEV","_jsxDEV","App","_s","started","setStarted","completed","setCompleted","viewAdmin","setViewAdmin","handleStart","handleCompletion","resetSurvey","localStorage","removeItem","AdminPage","fileName","_jsxFileName","lineNumber","columnNumber","onReset","children","onClick","onComplete","onStart","_c","$RefreshReg$"],"sources":["D:/PROJECTS/spdintern/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport WelcomeScreen from './WelcomeScreen';\nimport Survey from './Survey';\nimport ThankYouScreen from './ThankYouScreen';\n\n\nconst App = () => {\n  const [started, setStarted] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [viewAdmin, setViewAdmin] = useState(false); // State to toggle admin view\n\n  const handleStart = () => {\n    setStarted(true);\n  };\n\n  const handleCompletion = () => {\n    setCompleted(true);\n  };\n\n  const resetSurvey = () => {\n    setStarted(false);\n    setCompleted(false);\n    localStorage.removeItem('surveyAnswers');\n  };\n\n  if (viewAdmin) {\n    return <AdminPage />; // Render the AdminPage when the button is clicked\n  }\n\n  if (completed) {\n    return <ThankYouScreen onReset={resetSurvey} />;\n  }\n\n  return (\n    <div>\n      <button onClick={() => setViewAdmin(!viewAdmin)}>\n        {viewAdmin ? 'Back to Survey' : 'View Admin Page'}\n      </button>\n      {started ? (\n        <Survey onComplete={handleCompletion} />\n      ) : (\n        <WelcomeScreen onStart={handleStart} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBL,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBP,UAAU,CAAC,KAAK,CAAC;IACjBE,YAAY,CAAC,KAAK,CAAC;IACnBM,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;EAC1C,CAAC;EAED,IAAIN,SAAS,EAAE;IACb,oBAAOP,OAAA,CAACc,SAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACxB;EAEA,IAAIb,SAAS,EAAE;IACb,oBAAOL,OAAA,CAACF,cAAc;MAACqB,OAAO,EAAER;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjD;EAEA,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAAC,CAACD,SAAS,CAAE;MAAAa,QAAA,EAC7Cb,SAAS,GAAG,gBAAgB,GAAG;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACRf,OAAO,gBACNH,OAAA,CAACH,MAAM;MAACyB,UAAU,EAAEZ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAExClB,OAAA,CAACJ,aAAa;MAAC2B,OAAO,EAAEd;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvCID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}