{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WelcomeScreen from './WelcomeScreen';\nimport Survey from './Survey';\nimport ThankYouScreen from './ThankYouScreen';\n// Add CSS for admin view if necessary\n\nconst App = () => {\n  _s();\n  const [started, setStarted] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [viewAdmin, setViewAdmin] = useState(false); // State to toggle admin view\n\n  const handleStart = () => {\n    setStarted(true);\n  };\n  const handleCompletion = () => {\n    setCompleted(true);\n  };\n  const resetSurvey = () => {\n    setStarted(false);\n    setCompleted(false);\n    localStorage.removeItem('surveyAnswers');\n  };\n  const [surveyData, setSurveyData] = useState([]);\n  useEffect(() => {\n    if (viewAdmin) {\n      const storedData = JSON.parse(localStorage.getItem('surveyAnswers')) || [];\n      console.log(\"Loaded survey data:\", storedData); // Debugging\n      setSurveyData(storedData);\n    }\n  }, [viewAdmin]);\n};\n_s(App, \"fEUA48N7dnjJnmfXYMJs9Li0FF0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WelcomeScreen","Survey","ThankYouScreen","App","_s","started","setStarted","completed","setCompleted","viewAdmin","setViewAdmin","handleStart","handleCompletion","resetSurvey","localStorage","removeItem","surveyData","setSurveyData","storedData","JSON","parse","getItem","console","log","_c","$RefreshReg$"],"sources":["D:/PROJECTS/spdintern/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WelcomeScreen from './WelcomeScreen';\nimport Survey from './Survey';\nimport ThankYouScreen from './ThankYouScreen';\n // Add CSS for admin view if necessary\n\nconst App = () => {\n  const [started, setStarted] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [viewAdmin, setViewAdmin] = useState(false); // State to toggle admin view\n\n  const handleStart = () => {\n    setStarted(true);\n  };\n\n  const handleCompletion = () => {\n    setCompleted(true);\n  };\n\n  const resetSurvey = () => {\n    setStarted(false);\n    setCompleted(false);\n    localStorage.removeItem('surveyAnswers');\n  };\n\n  const [surveyData, setSurveyData] = useState([]);\n\n  useEffect(() => {\n  if (viewAdmin) {\n    const storedData = JSON.parse(localStorage.getItem('surveyAnswers')) || [];\n    console.log(\"Loaded survey data:\", storedData); // Debugging\n    setSurveyData(storedData);\n  }\n}, [viewAdmin]);\n\n  \n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC5C;;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxBL,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBP,UAAU,CAAC,KAAK,CAAC;IACjBE,YAAY,CAAC,KAAK,CAAC;IACnBM,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;EAC1C,CAAC;EAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IAChB,IAAIU,SAAS,EAAE;MACb,MAAMS,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACO,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;MAC1EC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEL,UAAU,CAAC,CAAC,CAAC;MAChDD,aAAa,CAACC,UAAU,CAAC;IAC3B;EACF,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;AAGf,CAAC;AAACL,EAAA,CA9BID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}