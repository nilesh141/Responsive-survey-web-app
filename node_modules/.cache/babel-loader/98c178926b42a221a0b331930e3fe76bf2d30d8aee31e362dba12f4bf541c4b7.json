{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\spdintern\\\\src\\\\Survey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport './survey.css';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionsData = [{\n  id: 1,\n  text: \"How satisfied are you with our products?\",\n  type: \"rating\",\n  scale: 5\n}, {\n  id: 2,\n  text: \"How fair are the prices compared to similar retailers?\",\n  type: \"rating\",\n  scale: 5\n}, {\n  id: 3,\n  text: \"How satisfied are you with the value for money of your purchase?\",\n  type: \"rating\",\n  scale: 5\n}, {\n  id: 4,\n  text: \"On a scale of 1-10 how would you recommend us to your friends and family?\",\n  type: \"rating\",\n  scale: 10\n}, {\n  id: 5,\n  text: \"What could we do to improve our service?\",\n  type: \"text\"\n}\n// \n];\nconst Survey = ({\n  onComplete\n}) => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [isConfirming, setIsConfirming] = useState(false);\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n  const handleNext = () => {\n    setCurrentQuestion(prev => Math.min(prev + 1, questionsData.length - 1));\n  };\n  const handlePrevious = () => {\n    setCurrentQuestion(prev => Math.max(prev - 1, 0));\n  };\n  const handleSubmit = () => {\n    setIsConfirming(true); // Trigger confirmation dialog\n  };\n  const handleConfirm = () => {\n    console.log(\"Saving answers to localStorage...\"); // Debugging log\n\n    const sessionId = new Date().toISOString(); // Generate a unique session ID based on timestamp\n    const storedData = JSON.parse(localStorage.getItem('surveyAnswers')) || [];\n\n    // Save the current answers along with the sessionId\n    const updatedData = [...storedData, {\n      sessionId,\n      answers: {\n        ...answers,\n        status: 'COMPLETED'\n      }\n    }];\n    localStorage.setItem('surveyAnswers', JSON.stringify(updatedData));\n    console.log(\"Updated survey data:\", updatedData); // Check what data is being saved\n\n    onComplete(); // Indicate the survey is completed\n  };\n  if (isConfirming) {\n    return /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentQuestion + 1, \" / \", questionsData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      question: questionsData[currentQuestion],\n      answer: answers[questionsData[currentQuestion].id],\n      onChange: handleAnswerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentQuestion === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentQuestion === questionsData.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), currentQuestion === questionsData.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Survey, \"60AN0ZoORxvuhb1oULHGA41KO44=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","Question","ConfirmationDialog","jsxDEV","_jsxDEV","questionsData","id","text","type","scale","Survey","onComplete","_s","currentQuestion","setCurrentQuestion","answers","setAnswers","isConfirming","setIsConfirming","handleAnswerChange","questionId","answer","prev","handleNext","Math","min","length","handlePrevious","max","handleSubmit","handleConfirm","console","log","sessionId","Date","toISOString","storedData","JSON","parse","localStorage","getItem","updatedData","status","setItem","stringify","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","className","children","question","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/PROJECTS/spdintern/src/Survey.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Question from './Question';\r\nimport './survey.css';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\n\r\nconst questionsData = [\r\n  { id: 1, text: \"How satisfied are you with our products?\", type: \"rating\", scale: 5 },\r\n  { id: 2, text: \"How fair are the prices compared to similar retailers?\", type: \"rating\", scale: 5 },\r\n  { id: 3, text: \"How satisfied are you with the value for money of your purchase?\", type: \"rating\", scale: 5 },\r\n  { id: 4, text: \"On a scale of 1-10 how would you recommend us to your friends and family?\", type: \"rating\", scale: 10 },\r\n  { id: 5, text: \"What could we do to improve our service?\", type: \"text\" }\r\n  // \r\n];\r\n\r\nconst Survey = ({ onComplete }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers((prev) => ({ ...prev, [questionId]: answer }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentQuestion((prev) => Math.min(prev + 1, questionsData.length - 1));\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentQuestion((prev) => Math.max(prev - 1, 0));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsConfirming(true);  // Trigger confirmation dialog\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    console.log(\"Saving answers to localStorage...\"); // Debugging log\r\n  \r\n    const sessionId = new Date().toISOString(); // Generate a unique session ID based on timestamp\r\n    const storedData = JSON.parse(localStorage.getItem('surveyAnswers')) || [];\r\n  \r\n    // Save the current answers along with the sessionId\r\n    const updatedData = [...storedData, { sessionId, answers: { ...answers, status: 'COMPLETED' } }];\r\n    localStorage.setItem('surveyAnswers', JSON.stringify(updatedData));\r\n  \r\n    console.log(\"Updated survey data:\", updatedData); // Check what data is being saved\r\n  \r\n    onComplete(); // Indicate the survey is completed\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  if (isConfirming) {\r\n    return <ConfirmationDialog onConfirm={handleConfirm} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"survey\">\r\n      <h2>Question {currentQuestion + 1} / {questionsData.length}</h2>\r\n      <Question \r\n        question={questionsData[currentQuestion]} \r\n        answer={answers[questionsData[currentQuestion].id]}\r\n        onChange={handleAnswerChange}\r\n      />\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrevious} disabled={currentQuestion === 0}>Previous</button>\r\n        <button onClick={handleNext} disabled={currentQuestion === questionsData.length - 1}>Next</button>\r\n      </div>\r\n      {currentQuestion === questionsData.length - 1 && (\r\n        <div className=\"submit-button-container\">\r\n          <button onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Survey;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,cAAc;AACrB,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAG,CACpB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,0CAA0C;EAAEC,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAE,CAAC,EACrF;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,wDAAwD;EAAEC,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAE,CAAC,EACnG;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,kEAAkE;EAAEC,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAE,CAAC,EAC7G;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,2EAA2E;EAAEC,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAG,CAAC,EACvH;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,0CAA0C;EAAEC,IAAI,EAAE;AAAO;AACxE;AAAA,CACD;AAED,MAAME,MAAM,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMmB,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;IACjDL,UAAU,CAAEM,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,UAAU,GAAGC;IAAO,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBT,kBAAkB,CAAEQ,IAAI,IAAKE,IAAI,CAACC,GAAG,CAACH,IAAI,GAAG,CAAC,EAAEjB,aAAa,CAACqB,MAAM,GAAG,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,kBAAkB,CAAEQ,IAAI,IAAKE,IAAI,CAACI,GAAG,CAACN,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBX,eAAe,CAAC,IAAI,CAAC,CAAC,CAAE;EAC1B,CAAC;EAED,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAC;;IAElD,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC5C,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;;IAE1E;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGL,UAAU,EAAE;MAAEH,SAAS;MAAElB,OAAO,EAAE;QAAE,GAAGA,OAAO;QAAE2B,MAAM,EAAE;MAAY;IAAE,CAAC,CAAC;IAChGH,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEN,IAAI,CAACO,SAAS,CAACH,WAAW,CAAC,CAAC;IAElEV,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAES,WAAW,CAAC,CAAC,CAAC;;IAElD9B,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAKD,IAAIM,YAAY,EAAE;IAChB,oBAAOb,OAAA,CAACF,kBAAkB;MAAC2C,SAAS,EAAEf;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzD;EAEA,oBACE7C,OAAA;IAAK8C,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrB/C,OAAA;MAAA+C,QAAA,GAAI,WAAS,EAACtC,eAAe,GAAG,CAAC,EAAC,KAAG,EAACR,aAAa,CAACqB,MAAM;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChE7C,OAAA,CAACH,QAAQ;MACPmD,QAAQ,EAAE/C,aAAa,CAACQ,eAAe,CAAE;MACzCQ,MAAM,EAAEN,OAAO,CAACV,aAAa,CAACQ,eAAe,CAAC,CAACP,EAAE,CAAE;MACnD+C,QAAQ,EAAElC;IAAmB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF7C,OAAA;MAAK8C,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC/C,OAAA;QAAQkD,OAAO,EAAE3B,cAAe;QAAC4B,QAAQ,EAAE1C,eAAe,KAAK,CAAE;QAAAsC,QAAA,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnF7C,OAAA;QAAQkD,OAAO,EAAE/B,UAAW;QAACgC,QAAQ,EAAE1C,eAAe,KAAKR,aAAa,CAACqB,MAAM,GAAG,CAAE;QAAAyB,QAAA,EAAC;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F,CAAC,EACLpC,eAAe,KAAKR,aAAa,CAACqB,MAAM,GAAG,CAAC,iBAC3CtB,OAAA;MAAK8C,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eACtC/C,OAAA;QAAQkD,OAAO,EAAEzB,YAAa;QAAAsB,QAAA,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CA9DIF,MAAM;AAAA8C,EAAA,GAAN9C,MAAM;AAwEZ,eAAeA,MAAM;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}